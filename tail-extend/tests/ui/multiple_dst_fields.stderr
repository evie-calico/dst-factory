error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/ui/multiple_dst_fields.rs:5:9
  |
5 |     id: str,
  |         ^^^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
  = note: only the last field of a struct may have a dynamically sized type
  = help: change the field's type to have a statically known size
help: borrowed types always have a statically known size
  |
5 |     id: &str,
  |         +
help: the `Box` type always has a statically known size and allocates its contents in the heap
  |
5 |     id: Box<str>,
  |         ++++   +

error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/ui/multiple_dst_fields.rs:5:9
  |
5 |     id: str,
  |         ^^^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
  = help: unsized fn params are gated as an unstable feature
help: function arguments must have a statically known size, borrowed types always have a known size
  |
5 |     id: &str,
  |         +

error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/ui/multiple_dst_fields.rs:3:1
  |
3 | #[make_dst_builder]
  | ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
  |
  = help: within `PrefixLayoutHelper`, the trait `Sized` is not implemented for `str`
note: required because it appears within the type `PrefixLayoutHelper`
 --> tests/ui/multiple_dst_fields.rs:3:1
  |
3 | #[make_dst_builder]
  | ^^^^^^^^^^^^^^^^^^^
note: required by an implicit `Sized` bound in `Layout::new`
 --> $RUST/core/src/alloc/layout.rs
  |
  |     pub const fn new<T>() -> Self {
  |                      ^ required by the implicit `Sized` requirement on this type parameter in `Layout::new`
  = note: this error originates in the attribute macro `make_dst_builder` (in Nightly builds, run with -Z macro-backtrace for more info)
